'''
This module creates a class that represents the list of positions generated by the user. It does
error handling to ensure that the input form the user conforms to the requirements of the question.

Created on Mar 31, 2015
@author: Adam Biesenbach
'''

# Create a new class for handling positions errors.
class TrialException(Exception): pass

class trial:
    """A class that represents the a number of trials."""

    #this next bit defines the 'constructor.' and the objects which are accessible when the class is initialized.
    def __init__(self, Trials):
        
        self.Trials = str(Trials)
                
        # In this section, I do some error testing to make sure that the user is feeding the right kind of input.
                
        def EmptySetHandling():
            """ If the user submits an empty list, throw an exception."""
            if self.Trials is None:
                raise TrialException("Empty trials list.")
        
        def ImproperInputHandling():
            """If they enter something that cannot be converted to a float [like letters or brackets], throw an exception."""
            try:
                self.TrialsInList =float(self.Trials)
            except ValueError:
                raise TrialException("Invalid trial.")

        def ImproperTrialsHandling():
            """ If the element is not an integer or is negative, throw exception."""
            if self.TrialsInList<=0 or (self.TrialsInList.is_integer() is False):
                raise TrialException("Number of trials must be integer greater than zero.")
            else:
                self.TrialNumber = int(self.TrialsInList)

        EmptySetHandling()
        ImproperInputHandling()
        ImproperTrialsHandling()
